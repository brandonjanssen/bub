<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JanTech</title>
    <link>https://jantech.xyz/</link>
    <description>Recent content on JanTech</description>
    <image>
      <url>https://jantech.xyz/img/lobe.png</url>
      <link>https://jantech.xyz/img/lobe.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Oct 2022 18:40:02 +0800</lastBuildDate><atom:link href="https://jantech.xyz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS Selectors CheatSheet</title>
      <link>https://jantech.xyz/post/css-selectors-cheatsheet/</link>
      <pubDate>Sat, 22 Oct 2022 18:40:02 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/css-selectors-cheatsheet/</guid>
      <description>&lt;h1 id=&#34;css-combinator-selectors&#34;&gt;CSS Combinator Selectors&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Descendant
&lt;ul&gt;
&lt;li&gt;Matching all elements inside parent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;!-- Descendant --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.container img {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	max-width: 100;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Child
&lt;ul&gt;
&lt;li&gt;Applies to only direct children of parent, further nested elements wont be selected.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &amp;lt;!-- Child --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.nav &amp;gt; li {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	padding: 10px;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Chained
&lt;ul&gt;
&lt;li&gt;Will select both class names.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &amp;lt;!-- Chained --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.class6.class3 {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	color:black
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Sibling
&lt;ul&gt;
&lt;li&gt;Selects elements next to sibling.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;lt;!-- Sibling --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;h4 ~ a {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	font-weight:bold;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Adjacent sibling
&lt;ul&gt;
&lt;li&gt;Used to select element directly after a specific element.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;lt;!-- Adjacent sibling --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;p + img {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	background-color: #1f2335;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<h1 id="css-combinator-selectors">CSS Combinator Selectors</h1>
<ul>
<li>Descendant
<ul>
<li>Matching all elements inside parent.</li>
</ul>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">    &lt;!-- Descendant --&gt;
</span></span><span class="line"><span class="cl">.container img {
</span></span><span class="line"><span class="cl">	max-width: 100;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>Child
<ul>
<li>Applies to only direct children of parent, further nested elements wont be selected.</li>
</ul>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">   &lt;!-- Child --&gt;
</span></span><span class="line"><span class="cl">.nav &gt; li {
</span></span><span class="line"><span class="cl">	padding: 10px;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>Chained
<ul>
<li>Will select both class names.</li>
</ul>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">     &lt;!-- Chained --&gt;
</span></span><span class="line"><span class="cl">.class6.class3 {
</span></span><span class="line"><span class="cl">	color:black
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>Sibling
<ul>
<li>Selects elements next to sibling.</li>
</ul>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">      &lt;!-- Sibling --&gt;
</span></span><span class="line"><span class="cl">h4 ~ a {
</span></span><span class="line"><span class="cl">	font-weight:bold;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><ul>
<li>Adjacent sibling
<ul>
<li>Used to select element directly after a specific element.</li>
</ul>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">  &lt;!-- Adjacent sibling --&gt;
</span></span><span class="line"><span class="cl">p + img {
</span></span><span class="line"><span class="cl">	background-color: #1f2335;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>CSS UNIT CHEATSHEET</title>
      <link>https://jantech.xyz/post/css-unit-cheatsheet/</link>
      <pubDate>Sat, 22 Oct 2022 18:15:35 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/css-unit-cheatsheet/</guid>
      <description>&lt;h2 id=&#34;absolute-units&#34;&gt;Absolute Units&lt;/h2&gt;
&lt;p&gt;Absolute is the same size regardless of the
parent element or size of window .&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Absolute Units&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&amp;raquo;=&amp;raquo;&amp;gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;px&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1px = 1/96th  of 1 inch (96px=1 inch)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;pt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1pt = 1/72th of 1 inch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;mm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1mm = 1/10th of 1 cm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;cm&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;= Centimetres&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;pc&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12pt = 1pc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;in&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;= Inches&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;relative-units&#34;&gt;Relative Units&lt;/h2&gt;
&lt;p&gt;Relative  scales to the parent or window size&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Relative Units&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&amp;raquo;=&amp;raquo;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to the parent element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;em&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to the font size of the element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;rem&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to the font size of the root element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ch&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to the width of the &amp;ldquo;0&amp;rdquo; (zero)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;vh&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to 1% of the viewport&amp;rsquo;s height.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;vmin&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to 1% of the viewport&amp;rsquo;s smaller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;vmax&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;ndash;&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Relative to 1% of the viewport&amp;rsquo;s larger dimension.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
      <content:encoded><![CDATA[<h2 id="absolute-units">Absolute Units</h2>
<p>Absolute is the same size regardless of the
parent element or size of window .</p>
<table>
<thead>
<tr>
<th style="text-align:center">Absolute Units</th>
<th style="text-align:center">&raquo;=&raquo;&gt;</th>
<th style="text-align:center">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">px</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">1px = 1/96th  of 1 inch (96px=1 inch)</td>
</tr>
<tr>
<td style="text-align:center">pt</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">1pt = 1/72th of 1 inch</td>
</tr>
<tr>
<td style="text-align:center">mm</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">1mm = 1/10th of 1 cm</td>
</tr>
<tr>
<td style="text-align:center">cm</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">= Centimetres</td>
</tr>
<tr>
<td style="text-align:center">pc</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">12pt = 1pc</td>
</tr>
<tr>
<td style="text-align:center">in</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">= Inches</td>
</tr>
</tbody>
</table>
<h2 id="relative-units">Relative Units</h2>
<p>Relative  scales to the parent or window size</p>
<table>
<thead>
<tr>
<th style="text-align:center">Relative Units</th>
<th style="text-align:center">&raquo;=&raquo;</th>
<th style="text-align:center">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">%</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to the parent element</td>
</tr>
<tr>
<td style="text-align:center">em</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to the font size of the element</td>
</tr>
<tr>
<td style="text-align:center">rem</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to the font size of the root element</td>
</tr>
<tr>
<td style="text-align:center">ch</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to the width of the &ldquo;0&rdquo; (zero)</td>
</tr>
<tr>
<td style="text-align:center">vh</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to 1% of the viewport&rsquo;s height.</td>
</tr>
<tr>
<td style="text-align:center">vmin</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to 1% of the viewport&rsquo;s smaller</td>
</tr>
<tr>
<td style="text-align:center">vmax</td>
<td style="text-align:center">&ndash;&gt;</td>
<td style="text-align:center">Relative to 1% of the viewport&rsquo;s larger dimension.</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    
    <item>
      <title>Text From Image With Python</title>
      <link>https://jantech.xyz/post/text-from-image-with-python/</link>
      <pubDate>Thu, 20 Oct 2022 20:15:08 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/text-from-image-with-python/</guid>
      <description>&lt;h1 id=&#34;copying-text-from-image-with-python&#34;&gt;Copying Text from Image with Python&lt;/h1&gt;
&lt;p&gt;One of the fastest ways to extract text from a image is with python. The basic script to do this is very small, it can get quite complicated depending on what you are trying to achieve.&lt;/p&gt;
&lt;p&gt;I will only show the basics to make this work and this only applies to Linux Debian based systems.&lt;/p&gt;
&lt;p&gt;if you like it and want to know more there is plenty of resources to research from.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;We will need PyTesseract&lt;/li&gt;
&lt;li&gt;And we will need  OpenCV&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be using VScode to demonstrate all of this. Install these two libraries using the terminal.&lt;/p&gt;
&lt;h2 id=&#34;step-1-dependencies&#34;&gt;Step 1. Dependencies&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install opencv-python
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install pytesseract
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install libtesseract-dev tesseract-ocr  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;From the terminal&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1. mkdir imagepy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2. cd imagepy 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3. touch img2txt.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4. open folder within VScode 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;step-2-write-a-couple-lines-of-code&#34;&gt;Step 2. Write a couple lines of code&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import cv2                                                                                         
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import pytesseract                                                                                 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;img = cv2.imread(&amp;#39;kitty.png&amp;#39;)  # &amp;lt;&amp;lt;---- insert image path here                              
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;text = pytesseract.image_to_string(img)                                                            
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(text)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;step-3--find-your-pic-and-hit-play&#34;&gt;Step 3.  Find your pic and hit Play&lt;/h2&gt;
&lt;p&gt;This is a pic of my qtile configs
&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/VlyviPo.png&#34; alt=&#34;kitty.png&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/f0ywglU.png&#34; alt=&#34;&#34;  /&gt;

This is the output
&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/iLwgoj1.png&#34; alt=&#34;&#34;  /&gt;

So it did a pretty decent job, it had some trouble with all of my commits. After its complete just copy and do whatever you would like.&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h1 id="copying-text-from-image-with-python">Copying Text from Image with Python</h1>
<p>One of the fastest ways to extract text from a image is with python. The basic script to do this is very small, it can get quite complicated depending on what you are trying to achieve.</p>
<p>I will only show the basics to make this work and this only applies to Linux Debian based systems.</p>
<p>if you like it and want to know more there is plenty of resources to research from.</p>
<hr>
<ul>
<li>We will need PyTesseract</li>
<li>And we will need  OpenCV</li>
</ul>
<p>I will be using VScode to demonstrate all of this. Install these two libraries using the terminal.</p>
<h2 id="step-1-dependencies">Step 1. Dependencies</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pip install opencv-python
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pip install pytesseract
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo apt update
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo apt-get install libtesseract-dev tesseract-ocr  
</span></span></code></pre></div><ol>
<li><strong>From the terminal</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">1. mkdir imagepy
</span></span><span class="line"><span class="cl">2. cd imagepy 
</span></span><span class="line"><span class="cl">3. touch img2txt.py
</span></span><span class="line"><span class="cl">4. open folder within VScode 
</span></span></code></pre></div><h2 id="step-2-write-a-couple-lines-of-code">Step 2. Write a couple lines of code</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">import cv2                                                                                         
</span></span><span class="line"><span class="cl">import pytesseract                                                                                 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">img = cv2.imread(&#39;kitty.png&#39;)  # &lt;&lt;---- insert image path here                              
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">text = pytesseract.image_to_string(img)                                                            
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">print(text)
</span></span></code></pre></div><h2 id="step-3--find-your-pic-and-hit-play">Step 3.  Find your pic and hit Play</h2>
<p>This is a pic of my qtile configs
<img loading="lazy" src="https://imgur.com/VlyviPo.png" alt="kitty.png"  />
</p>
<p><img loading="lazy" src="https://imgur.com/f0ywglU.png" alt=""  />

This is the output
<img loading="lazy" src="https://imgur.com/iLwgoj1.png" alt=""  />

So it did a pretty decent job, it had some trouble with all of my commits. After its complete just copy and do whatever you would like.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Text Arch</title>
      <link>https://jantech.xyz/post/text-arch/</link>
      <pubDate>Mon, 17 Oct 2022 21:39:29 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/text-arch/</guid>
      <description>&lt;h1 id=&#34;text-to-arch-script-with-excalidraw-on-obsidian&#34;&gt;Text To Arch Script With Excalidraw On Obsidian&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/I8c05jw.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;First we need to install excalidraw on obsidian. This is the link for &lt;a href=&#34;https://github.com/zsviczian/obsidian-excalidraw-plugin&#34;&gt;Excalidraw GitHub&lt;/a&gt; and it  will show quite a bit of info, but you will want to install it from community plugins page in setting and you will have to turn on restricted mode.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/uV1pgOk.png&#34; alt=&#34;Text&#34;  title=&#34;Title&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;In the top right button that looks like settings icon click that and it will bring up all the scripts available to install, the text arch script was close to the bottom of the page.&lt;/p&gt;
&lt;p&gt;After that is done we have to figure out how to use it, if you are like me and pretty new to excalidraw it can take a little time to sort out all the features it has to offer.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Now you will want to write some text, make sure the text is in a expandable box. Then at top right click the obsidian icon, a drop down menu will appear and there will be a section that says &lt;em&gt;&lt;strong&gt;Downloaded Scripts&lt;/strong&gt;&lt;/em&gt;. Next click the text arch icon then follow the instructions.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/vfPAUYQ.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;After messing around with it for a few minutes you can achieve something like this, or something  much much better.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://imgur.com/3Q0Xbp6.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Excalidraw is an exceptional add on to obsidian and has helped me several times in my short knowing of this tool. This tool fits so many needs, drawing, flow charts, mind maps, and much more, add in scripting and the possibilities are endless. Want to know more, this is his youtube channel  &lt;a href=&#34;https://www.youtube.com/c/VisualPKM&#34;&gt;Zsolt&amp;rsquo;s Visual Personal Knowledge Management&lt;/a&gt;, his videos are quite lengthy sometimes but detailed.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the script that will be installed on obsidian and  can be found &lt;a href=&#34;https://github.com/zsviczian/obsidian-excalidraw-plugin/blob/master/ea-scripts/Text%20Arch.md&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This script is viewable and editable on obsidian.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;el = ea.getViewSelectedElement();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;if(!el || el.type!==&amp;#34;text&amp;#34;) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	new Notice(&amp;#34;Please select a text element&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  return;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ea.style.fontSize = el.fontSize;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ea.style.fontFamily = el.fontFamily;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ea.style.strokeColor = el.strokeColor;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ea.style.opacity = el.opacity;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;const r = parseInt (await utils.inputPrompt(&amp;#34;The radius of the arch you&amp;#39;d like to fit the text to&amp;#34;,&amp;#34;number&amp;#34;,&amp;#34;150&amp;#34;));
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;const archAbove = await utils.suggester([&amp;#34;Arch above&amp;#34;,&amp;#34;Arch below&amp;#34;],[true,false]);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;if(isNaN(r)) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  new Notice(&amp;#34;The radius is not a number&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  return;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;circlePoint = (angle) =&amp;gt; archAbove
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ? [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		r * Math.sin(angle),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		-r * Math.cos(angle)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		-r * Math.sin(angle),
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		r * Math.cos(angle)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;let rot = (archAbove ? -0.5 : 0.5) * ea.measureText(el.text).width/r;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;let objectIDs = [];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for(i=0;i&amp;lt;el.text.length;i++) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	const character = el.text.substring(i,i+1);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	const width = ea.measureText(character).width;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ea.style.angle = rot;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  const [x,y] = circlePoint(rot);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  rot += (archAbove ? 1 : -1) *width / r;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  objectIDs.push(ea.addText(x,y,character));
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ea.addToGroup(objectIDs);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ea.addElementsToView(true);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<h1 id="text-to-arch-script-with-excalidraw-on-obsidian">Text To Arch Script With Excalidraw On Obsidian</h1>
<p><img loading="lazy" src="https://imgur.com/I8c05jw.png" alt=""  />
</p>
<p>First we need to install excalidraw on obsidian. This is the link for <a href="https://github.com/zsviczian/obsidian-excalidraw-plugin">Excalidraw GitHub</a> and it  will show quite a bit of info, but you will want to install it from community plugins page in setting and you will have to turn on restricted mode.</p>
<hr>
<p><img loading="lazy" src="https://imgur.com/uV1pgOk.png" alt="Text"  title="Title"  />
</p>
<p>In the top right button that looks like settings icon click that and it will bring up all the scripts available to install, the text arch script was close to the bottom of the page.</p>
<p>After that is done we have to figure out how to use it, if you are like me and pretty new to excalidraw it can take a little time to sort out all the features it has to offer.</p>
<hr>
<p>Now you will want to write some text, make sure the text is in a expandable box. Then at top right click the obsidian icon, a drop down menu will appear and there will be a section that says <em><strong>Downloaded Scripts</strong></em>. Next click the text arch icon then follow the instructions.</p>
<p><img loading="lazy" src="https://imgur.com/vfPAUYQ.png" alt=""  />
</p>
<p>After messing around with it for a few minutes you can achieve something like this, or something  much much better.</p>
<p><img loading="lazy" src="https://imgur.com/3Q0Xbp6.png" alt=""  />
</p>
<hr>
<p>Excalidraw is an exceptional add on to obsidian and has helped me several times in my short knowing of this tool. This tool fits so many needs, drawing, flow charts, mind maps, and much more, add in scripting and the possibilities are endless. Want to know more, this is his youtube channel  <a href="https://www.youtube.com/c/VisualPKM">Zsolt&rsquo;s Visual Personal Knowledge Management</a>, his videos are quite lengthy sometimes but detailed.</p>
<hr>
<blockquote>
<p>This is the script that will be installed on obsidian and  can be found <a href="https://github.com/zsviczian/obsidian-excalidraw-plugin/blob/master/ea-scripts/Text%20Arch.md">here.</a></p>
<p>This script is viewable and editable on obsidian.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">*/
</span></span><span class="line"><span class="cl">el = ea.getViewSelectedElement();
</span></span><span class="line"><span class="cl">if(!el || el.type!==&#34;text&#34;) {
</span></span><span class="line"><span class="cl">	new Notice(&#34;Please select a text element&#34;);
</span></span><span class="line"><span class="cl">  return;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ea.style.fontSize = el.fontSize;
</span></span><span class="line"><span class="cl">ea.style.fontFamily = el.fontFamily;
</span></span><span class="line"><span class="cl">ea.style.strokeColor = el.strokeColor;
</span></span><span class="line"><span class="cl">ea.style.opacity = el.opacity;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">const r = parseInt (await utils.inputPrompt(&#34;The radius of the arch you&#39;d like to fit the text to&#34;,&#34;number&#34;,&#34;150&#34;));
</span></span><span class="line"><span class="cl">const archAbove = await utils.suggester([&#34;Arch above&#34;,&#34;Arch below&#34;],[true,false]);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">if(isNaN(r)) {
</span></span><span class="line"><span class="cl">  new Notice(&#34;The radius is not a number&#34;);
</span></span><span class="line"><span class="cl">  return;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">circlePoint = (angle) =&gt; archAbove
</span></span><span class="line"><span class="cl">  ? [
</span></span><span class="line"><span class="cl">		r * Math.sin(angle),
</span></span><span class="line"><span class="cl">		-r * Math.cos(angle)
</span></span><span class="line"><span class="cl">	]
</span></span><span class="line"><span class="cl">	: [
</span></span><span class="line"><span class="cl">		-r * Math.sin(angle),
</span></span><span class="line"><span class="cl">		r * Math.cos(angle)
</span></span><span class="line"><span class="cl">	];
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">let rot = (archAbove ? -0.5 : 0.5) * ea.measureText(el.text).width/r;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">let objectIDs = [];
</span></span><span class="line"><span class="cl">for(i=0;i&lt;el.text.length;i++) {
</span></span><span class="line"><span class="cl">	const character = el.text.substring(i,i+1);
</span></span><span class="line"><span class="cl">	const width = ea.measureText(character).width;
</span></span><span class="line"><span class="cl">  ea.style.angle = rot;
</span></span><span class="line"><span class="cl">  const [x,y] = circlePoint(rot);
</span></span><span class="line"><span class="cl">  rot += (archAbove ? 1 : -1) *width / r;
</span></span><span class="line"><span class="cl">  objectIDs.push(ea.addText(x,y,character));
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">ea.addToGroup(objectIDs);
</span></span><span class="line"><span class="cl">ea.addElementsToView(true);
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>How I am evolving since I learned linux </title>
      <link>https://jantech.xyz/post/learning-linux-the-hard-way/</link>
      <pubDate>Fri, 14 Oct 2022 22:35:17 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/learning-linux-the-hard-way/</guid>
      <description>&lt;p&gt;I started my computer crash course during the start of the covid lockdowns with a &lt;a href=&#34;https://www.raspberrypi.com/&#34;&gt;Raspberry Pi 4b&lt;/a&gt;. Being self-taught it was the best way to start since I had no previous experience with computers and the cost of failure was low.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Since then I have mastered turning a server into a fully customized desktop using &lt;a href=&#34;http://www.qtile.org/&#34;&gt;Qtile&lt;/a&gt; as my window manager and this took some time to get used to, but well worth the effort if you like the speed of transitioning from project to project.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The downside of being self-taught is you have no sense of direction on what to focus on.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Since those first few years, I have configured &lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;Emacs&lt;/a&gt; several times and honestly, I believe it is the best. It  takes a long time to configure it the way you want,  with all the possibilities it has to offer. Since I didn&amp;rsquo;t use &lt;a href=&#34;https://github.com/brandonjanssen&#34;&gt;GitHub&lt;/a&gt; at the time to save all my configs, I would have to learn it over and over again. Like I had to do with all the other programs I installed, until I found the power of  &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Focus is key with any tech and I have been focusing on the wrong things, my focus on Linux has been good but I have spent too much time on the configurations of Linux and not learning the tech that helps create.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I have focus now and that is HTML, CSS, JavaScript, Python, and UI/UX this makes sense to me since I like tinkering with configs, what could be better than building websites to let out all my creativity.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://agoric.com/&#34;&gt;Agoric&lt;/a&gt; lets you write DEFI contracts in JavaScript, so I think this is a great opportunity to use all of the languages I mentioned above and put them to good use.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;As of 10-12-2022 i have created my first website. Focusing on design first and now starting to create  content. All posts with the exception of this one are incomplete as of &lt;em&gt;&lt;strong&gt;10-16-2022&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;list-of-things-to-complete-are-the-following&#34;&gt;List of things to complete are the following.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add some content&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a Logo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a comments sections to each page.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See if i can create a eCommerce page using a static  website.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Would like to add a section for just Crypto, like a page for best farm APR&amp;rsquo;s and APY&amp;rsquo;s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A  Linux and a opensource guide page to find useful tools would be nice for beginners that have a hard time finding there needs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/D_M_N_E&#34;&gt;🆃🆆🅸🆃🆃🅴🆁&lt;/a&gt;
&lt;a href=&#34;https://github.com/brandonjanssen&#34;&gt;🅶🅸🆃🅷🆄🅱&lt;/a&gt;
&lt;a href=&#34;https://www.jantech.xyz/&#34;&gt;🆆🅴🅱🆂🅸🆃🅴&lt;/a&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>I started my computer crash course during the start of the covid lockdowns with a <a href="https://www.raspberrypi.com/">Raspberry Pi 4b</a>. Being self-taught it was the best way to start since I had no previous experience with computers and the cost of failure was low.</p>
<hr>
<p>Since then I have mastered turning a server into a fully customized desktop using <a href="http://www.qtile.org/">Qtile</a> as my window manager and this took some time to get used to, but well worth the effort if you like the speed of transitioning from project to project.</p>
<hr>
<p>The downside of being self-taught is you have no sense of direction on what to focus on.</p>
<hr>
<p>Since those first few years, I have configured <a href="https://www.gnu.org/software/emacs/">Emacs</a> several times and honestly, I believe it is the best. It  takes a long time to configure it the way you want,  with all the possibilities it has to offer. Since I didn&rsquo;t use <a href="https://github.com/brandonjanssen">GitHub</a> at the time to save all my configs, I would have to learn it over and over again. Like I had to do with all the other programs I installed, until I found the power of  <a href="https://github.com">GitHub</a>.</p>
<hr>
<p>Focus is key with any tech and I have been focusing on the wrong things, my focus on Linux has been good but I have spent too much time on the configurations of Linux and not learning the tech that helps create.</p>
<hr>
<p>I have focus now and that is HTML, CSS, JavaScript, Python, and UI/UX this makes sense to me since I like tinkering with configs, what could be better than building websites to let out all my creativity.</p>
<hr>
<p><a href="https://agoric.com/">Agoric</a> lets you write DEFI contracts in JavaScript, so I think this is a great opportunity to use all of the languages I mentioned above and put them to good use.</p>
<hr>
<blockquote>
<p>As of 10-12-2022 i have created my first website. Focusing on design first and now starting to create  content. All posts with the exception of this one are incomplete as of <em><strong>10-16-2022</strong></em></p>
<h4 id="list-of-things-to-complete-are-the-following">List of things to complete are the following.</h4>
<ol>
<li>
<p>Add some content</p>
</li>
<li>
<p>Add a Logo</p>
</li>
<li>
<p>Add a comments sections to each page.</p>
</li>
<li>
<p>See if i can create a eCommerce page using a static  website.</p>
</li>
<li>
<p>Would like to add a section for just Crypto, like a page for best farm APR&rsquo;s and APY&rsquo;s</p>
</li>
<li>
<p>A  Linux and a opensource guide page to find useful tools would be nice for beginners that have a hard time finding there needs.</p>
</li>
</ol>
</blockquote>
<hr>
<p><a href="https://twitter.com/D_M_N_E">🆃🆆🅸🆃🆃🅴🆁</a>
<a href="https://github.com/brandonjanssen">🅶🅸🆃🅷🆄🅱</a>
<a href="https://www.jantech.xyz/">🆆🅴🅱🆂🅸🆃🅴</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Strategies on Fusion</title>
      <link>https://jantech.xyz/post/nova-network-strategies-on-fusion/</link>
      <pubDate>Thu, 13 Oct 2022 21:58:31 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/nova-network-strategies-on-fusion/</guid>
      <description>&lt;h1 id=&#34;strategies-on-fusion--httpsfusionnovanetworkio&#34;&gt;&lt;a href=&#34;https://fusion.novanetwork.io/#/&#34;&gt;Strategies On Fusion  &lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://novanetwork.io/ecosystem&#34;&gt;Nova Network&lt;/a&gt; Is a different kind of protocol , no crazy APY or APR, built for long term success #GrownUpDeFi. So with this in mind this is a long term hold and commitment on some of these ideas,  If you believe in the success of &lt;a href=&#34;https://novanetwork.io/&#34;&gt;Nova Network.&lt;/a&gt; &lt;!-- raw HTML omitted --&gt;DYOR&lt;!-- raw HTML omitted --&gt; They have great docs and offer a lot of help if you want to build with them, check out their &lt;a href=&#34;https://github.com/nova-network-inc&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;income-staking&#34;&gt;Income Staking&lt;/h2&gt;
&lt;p&gt;We will start with a long term strategy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Getting  setup&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not everyone knows how to bridge $SNT to &lt;a href=&#34;https://fusion.novanetwork.io/#/bridge&#34;&gt;Nova Network &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For those who do not, you can buy $SNT on Fantom at &lt;strong&gt;&lt;a href=&#34;https://app.firebird.finance/swap&#34;&gt;Firebird Finance&lt;/a&gt;&lt;/strong&gt; a nice place to swap plus they have great tokenomics and  give you some kick back for your troubles. The conract adress is &lt;!-- raw HTML omitted --&gt;0x69D17C151EF62421ec338a0c92ca1c1202A427EC &lt;!-- raw HTML omitted --&gt;  check it here &lt;a href=&#34;https://dexscreener.com/fantom/0x656aad6d994cb71f9a4738cae58ee64fee72345d&#34;&gt;@ Dex Screener&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Connect to &lt;a href=&#34;https://fusion.novanetwork.io/#/bridge&#34;&gt;Fusion  &lt;/a&gt; using Fantom Network then read the instructions provided&lt;/p&gt;
&lt;p&gt;Do some research, look at the bottom of page before making a choice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://user-images.githubusercontent.com/66816413/190131675-f27c7b38-4d11-4a8f-8de1-b7fe70648a87.png&#34; alt=&#34;image&#34;  /&gt;

&lt;img loading=&#34;lazy&#34; src=&#34;https://user-images.githubusercontent.com/66816413/190131004-b0ef792e-1037-4109-9ed2-f6e73a221ab5.png&#34; alt=&#34;image&#34;  /&gt;

&lt;img loading=&#34;lazy&#34; src=&#34;https://user-images.githubusercontent.com/66816413/190131345-6625bf29-9a40-4658-b099-1e5358b2d638.png&#34; alt=&#34;image&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;5 Years is a long time, but. This protocol started during a bear market, so it could take five years before the markets make a full comeback, nice time to stack your bags. I take these rewards and I reinvest into &lt;a href=&#34;https://fusion.novanetwork.io/#/farms/SNT/0x1F5396f254EE25377A5C1b9c6BfF5f44e9294fFF&#34;&gt;SNT/NUSD Yeild Farm&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;sntnusd-yeild-farm&#34;&gt;SNT/NUSD Yeild Farm&lt;/h3&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://user-images.githubusercontent.com/66816413/190132111-171dd1e0-7497-47fb-8039-352de3157dd1.png&#34; alt=&#34;image&#34;  /&gt;

&lt;img loading=&#34;lazy&#34; src=&#34;https://user-images.githubusercontent.com/66816413/190132433-8835ba3c-d295-4776-adf2-e523df3dd5f4.png&#34; alt=&#34;image&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Then i take the  &lt;a href=&#34;https://fusion.novanetwork.io/#/farms/SNT/0x1F5396f254EE25377A5C1b9c6BfF5f44e9294fFF&#34;&gt;SNT/NUSD Yeild Farm&lt;/a&gt; rewards then invest it into the  &lt;a href=&#34;https://fusion.novanetwork.io/#/bond-staking/pool/2&#34;&gt;&lt;strong&gt;3 Months Maturity Bond Staking Pool.&lt;/strong&gt;&lt;/a&gt; I use this as it gives me the best return in a short period of time. Then i repeat it over and over&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you can see their is couple ways that you can make your money work for you, if your willing to commit.&lt;/p&gt;
&lt;p&gt;I think this protocol has potential due to low supply of 60,000,000 tokens, the exact amount is not known.&lt;/p&gt;
&lt;p&gt;There is a substantial price difference between OnChain and OffChain. &lt;em&gt;&lt;strong&gt;OnChain as of 10-16-2022  show a price of $0.012588 per 1 $SNT.  OffChain being&lt;/strong&gt;&lt;/em&gt;  &lt;strong&gt;&lt;a href=&#34;https://app.firebird.finance/swap&#34;&gt;Firebird Finance &lt;/a&gt;&lt;/strong&gt; &lt;em&gt;&lt;strong&gt;on Fantom #FTM with a price of  $0.006375  as of  10-16-2022  that&amp;rsquo;s a nice arbitrage.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;paid-to-do-it&#34;&gt;Paid to do it&lt;/h3&gt;
&lt;p&gt;What i am doing is buying on Fantom and Bridging it to NovaNetwork which is a free transaction, then selling the difference for $NUSD then you decide what you want to do. All i can say is as of right now you are getting paid to buy $SNT  on Fantom if you  bridge it to the NovaNetwork and sell half for $NUSD.&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Low Market Cap, could = to the moon if it gets traction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All of what i have illustrated, pays you native $SNT and $WSNT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is nice to able loop your investment&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;I hope you have enjoyed this guide, this is not financial advice&lt;/strong&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
      <content:encoded><![CDATA[<h1 id="strategies-on-fusion--httpsfusionnovanetworkio"><a href="https://fusion.novanetwork.io/#/">Strategies On Fusion  </a></h1>
<p><a href="https://novanetwork.io/ecosystem">Nova Network</a> Is a different kind of protocol , no crazy APY or APR, built for long term success #GrownUpDeFi. So with this in mind this is a long term hold and commitment on some of these ideas,  If you believe in the success of <a href="https://novanetwork.io/">Nova Network.</a> <!-- raw HTML omitted -->DYOR<!-- raw HTML omitted --> They have great docs and offer a lot of help if you want to build with them, check out their <a href="https://github.com/nova-network-inc">GitHub</a></p>
<h2 id="income-staking">Income Staking</h2>
<p>We will start with a long term strategy.</p>
<blockquote>
<p><strong>Getting  setup</strong></p>
<p>Not everyone knows how to bridge $SNT to <a href="https://fusion.novanetwork.io/#/bridge">Nova Network </a></p>
<p>For those who do not, you can buy $SNT on Fantom at <strong><a href="https://app.firebird.finance/swap">Firebird Finance</a></strong> a nice place to swap plus they have great tokenomics and  give you some kick back for your troubles. The conract adress is <!-- raw HTML omitted -->0x69D17C151EF62421ec338a0c92ca1c1202A427EC <!-- raw HTML omitted -->  check it here <a href="https://dexscreener.com/fantom/0x656aad6d994cb71f9a4738cae58ee64fee72345d">@ Dex Screener</a></p>
<p>Connect to <a href="https://fusion.novanetwork.io/#/bridge">Fusion  </a> using Fantom Network then read the instructions provided</p>
<p>Do some research, look at the bottom of page before making a choice.</p>
</blockquote>
<p><img loading="lazy" src="https://user-images.githubusercontent.com/66816413/190131675-f27c7b38-4d11-4a8f-8de1-b7fe70648a87.png" alt="image"  />

<img loading="lazy" src="https://user-images.githubusercontent.com/66816413/190131004-b0ef792e-1037-4109-9ed2-f6e73a221ab5.png" alt="image"  />

<img loading="lazy" src="https://user-images.githubusercontent.com/66816413/190131345-6625bf29-9a40-4658-b099-1e5358b2d638.png" alt="image"  />
</p>
<p>5 Years is a long time, but. This protocol started during a bear market, so it could take five years before the markets make a full comeback, nice time to stack your bags. I take these rewards and I reinvest into <a href="https://fusion.novanetwork.io/#/farms/SNT/0x1F5396f254EE25377A5C1b9c6BfF5f44e9294fFF">SNT/NUSD Yeild Farm</a></p>
<h3 id="sntnusd-yeild-farm">SNT/NUSD Yeild Farm</h3>
<p><img loading="lazy" src="https://user-images.githubusercontent.com/66816413/190132111-171dd1e0-7497-47fb-8039-352de3157dd1.png" alt="image"  />

<img loading="lazy" src="https://user-images.githubusercontent.com/66816413/190132433-8835ba3c-d295-4776-adf2-e523df3dd5f4.png" alt="image"  />
</p>
<blockquote>
<p>Then i take the  <a href="https://fusion.novanetwork.io/#/farms/SNT/0x1F5396f254EE25377A5C1b9c6BfF5f44e9294fFF">SNT/NUSD Yeild Farm</a> rewards then invest it into the  <a href="https://fusion.novanetwork.io/#/bond-staking/pool/2"><strong>3 Months Maturity Bond Staking Pool.</strong></a> I use this as it gives me the best return in a short period of time. Then i repeat it over and over</p>
</blockquote>
<p>As you can see their is couple ways that you can make your money work for you, if your willing to commit.</p>
<p>I think this protocol has potential due to low supply of 60,000,000 tokens, the exact amount is not known.</p>
<p>There is a substantial price difference between OnChain and OffChain. <em><strong>OnChain as of 10-16-2022  show a price of $0.012588 per 1 $SNT.  OffChain being</strong></em>  <strong><a href="https://app.firebird.finance/swap">Firebird Finance </a></strong> <em><strong>on Fantom #FTM with a price of  $0.006375  as of  10-16-2022  that&rsquo;s a nice arbitrage.</strong></em></p>
<hr>
<h3 id="paid-to-do-it">Paid to do it</h3>
<p>What i am doing is buying on Fantom and Bridging it to NovaNetwork which is a free transaction, then selling the difference for $NUSD then you decide what you want to do. All i can say is as of right now you are getting paid to buy $SNT  on Fantom if you  bridge it to the NovaNetwork and sell half for $NUSD.</p>
<hr>
<blockquote>
<ul>
<li>
<p>Low Market Cap, could = to the moon if it gets traction.</p>
</li>
<li>
<p>All of what i have illustrated, pays you native $SNT and $WSNT</p>
</li>
<li>
<p>It is nice to able loop your investment</p>
</li>
</ul>
</blockquote>
<p><strong>I hope you have enjoyed this guide, this is not financial advice</strong></p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    
    <item>
      <title>Tools for Research</title>
      <link>https://jantech.xyz/post/tools-for-research/</link>
      <pubDate>Thu, 13 Oct 2022 13:20:15 +0800</pubDate>
      
      <guid>https://jantech.xyz/post/tools-for-research/</guid>
      <description>&lt;h1 id=&#34;wallet-tracking&#34;&gt;Wallet Tracking&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://debank.com&#34;&gt;DeBank&lt;/a&gt; you put your wallet address here to see your investments.This is not small block-chain friendly.If you use this correctly you can enter other wallet  addresses and see what they are investing in.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://portfolio.nansen.ai/&#34;&gt;Nansen Portfolio&lt;/a&gt; this is probably the best wallet tracker, also gives analytics of the tokens that you hold.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tin.network/en/dashboard&#34;&gt;Tin.Network&lt;/a&gt;, I only use this to track wallets on Harmony ONE.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;defi-dashboard&#34;&gt;Defi Dashboard&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nanoly.com/&#34;&gt;Nanoly&lt;/a&gt; this is good for searching farms with good APY&amp;rsquo;s or APR&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://defillama.com/&#34;&gt;Defillama&lt;/a&gt;  is a overview of all of #DEFI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;trading-view&#34;&gt;Trading View&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dexscreener.com/&#34;&gt;DEX Screener&lt;/a&gt; search most popular #EVM chain and their coins  and they have been adding #IBC chains as well of lately.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coingecko.com/&#34;&gt;Coingecko&lt;/a&gt; token search engine must use.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geckoterminal.com/&#34;&gt;Gecko Terminal&lt;/a&gt; use this like dex screener, this had a recent overhaul and i think its better than &lt;a href=&#34;https://dexscreener.com/&#34;&gt;dexscreener &lt;/a&gt; now.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nomics.com&#34;&gt;Nomics&lt;/a&gt; use this like dex screener but for small unknown coins.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tradingview.com&#34;&gt;Trading View&lt;/a&gt; is a important tool, you can see futures,stocks,bonds,commodities,cyrpto it does a lot. You have to make a account to use it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;researching&#34;&gt;Researching&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dune.com/browse/dashboards&#34;&gt;Dune&lt;/a&gt; for deep research.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://messari.io&#34;&gt;Messari&lt;/a&gt; is another great tool for research.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;market-cap-potential&#34;&gt;Market Cap Potential&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.marketcapof.com&#34;&gt;Market Cap Calculator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;github-commits-on-projects&#34;&gt;GitHub Commits on projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cryptomiso.com/&#34;&gt;CryptoMiso&lt;/a&gt; shows you how busy devs are on #GitHub developing #Blockchain or #Crypto projects that you are invested in.&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h1 id="wallet-tracking">Wallet Tracking</h1>
<ul>
<li><a href="https://debank.com">DeBank</a> you put your wallet address here to see your investments.This is not small block-chain friendly.If you use this correctly you can enter other wallet  addresses and see what they are investing in.</li>
<li><a href="https://portfolio.nansen.ai/">Nansen Portfolio</a> this is probably the best wallet tracker, also gives analytics of the tokens that you hold.</li>
<li><a href="https://tin.network/en/dashboard">Tin.Network</a>, I only use this to track wallets on Harmony ONE.</li>
</ul>
<h2 id="defi-dashboard">Defi Dashboard</h2>
<ul>
<li><a href="https://nanoly.com/">Nanoly</a> this is good for searching farms with good APY&rsquo;s or APR</li>
<li><a href="https://defillama.com/">Defillama</a>  is a overview of all of #DEFI</li>
</ul>
<h2 id="trading-view">Trading View</h2>
<ul>
<li><a href="https://dexscreener.com/">DEX Screener</a> search most popular #EVM chain and their coins  and they have been adding #IBC chains as well of lately.</li>
<li><a href="https://www.coingecko.com/">Coingecko</a> token search engine must use.</li>
<li><a href="https://geckoterminal.com/">Gecko Terminal</a> use this like dex screener, this had a recent overhaul and i think its better than <a href="https://dexscreener.com/">dexscreener </a> now.</li>
<li><a href="https://nomics.com">Nomics</a> use this like dex screener but for small unknown coins.</li>
<li><a href="https://www.tradingview.com">Trading View</a> is a important tool, you can see futures,stocks,bonds,commodities,cyrpto it does a lot. You have to make a account to use it.</li>
</ul>
<h2 id="researching">Researching</h2>
<ul>
<li><a href="https://dune.com/browse/dashboards">Dune</a> for deep research.</li>
<li><a href="https://messari.io">Messari</a> is another great tool for research.</li>
</ul>
<h2 id="market-cap-potential">Market Cap Potential</h2>
<ul>
<li><a href="https://www.marketcapof.com">Market Cap Calculator</a></li>
</ul>
<h2 id="github-commits-on-projects">GitHub Commits on projects</h2>
<ul>
<li><a href="https://www.cryptomiso.com/">CryptoMiso</a> shows you how busy devs are on #GitHub developing #Blockchain or #Crypto projects that you are invested in.</li>
</ul>
]]></content:encoded>
    </item>
    
    
    
  </channel>
</rss>
